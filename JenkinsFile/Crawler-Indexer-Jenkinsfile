pipeline {
    agent any
    tools {
        jdk 'jdk'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Checkout from Git') {
            steps {
                git branch: 'main',credentialsId: 'GITHUB', url: 'https://github.com/AndreNguyen03/simple-search-engine.git'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('backend/crawler_indexer') {
                    withSonarQubeEnv('sonar-server') {
                        sh '''${SCANNER_HOME}/bin/sonar-scanner \
                              -Dsonar.projectName=crawler-indexer \
                              -Dsonar.projectKey=crawler-indexer'''
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }

        stage('Security Scan (Trivy)') {
            steps {
                dir('backend/crawler_indexer') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit --nvdApiKey=b5aece65-76a0-4604-a3e6-b29a27ce13b0', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('backend/crawler_indexer') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('backend/crawler_indexer') {
                        def imageTag = "andrenguyen03/crawler_indexer:${BUILD_NUMBER}"
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh "docker build -t ${imageTag} ."
                            sh "docker push ${imageTag}"
                        }
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh 'trivy image andrenguyen03/crawler_indexer:${BUILD_NUMBER} > trivyimage.txt'
            }
        }
        stage('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: 'GITHUB', url: 'https://github.com/AndreNguyen03/simple-search-engine.git'
            }
        }
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "simple-search-engine"
                GIT_USER_NAME = "AndreNguyen03"
            }
            steps {
                dir('k8s/crawler-indexer') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "ngocanh030110@example.com"
                            git config user.name "Ngoc Anh Nguyen"
                            imageTag=$(grep -oP '(?<=crawler-indexer:)[^ ]+' cronjob.yaml)
                            sed -i "s/$andrenguyen03:crawler-indexer:${imageTag}/$andrenguyen03:crawler-indexer:${BUILD_NUMBER}/" cronjob.yaml
                            git add cronjob.yaml
                            git commit -m "Update cronjob Image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                        '''
                    }
                }
            }
        }
    }
}
